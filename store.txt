Redis, NodeJs Cách khắc phục kho còn 1 nhưng có nhiều USERS mua hàng cùng một lúc

// giả sử số lượng tồn kho hiện tại là 10
const slTonkho = 10
//tn của sp.
const keyName = "iPhone13"
// mỗi lần mua thì lượng tiêu thụ hàng tồn kho là 1
const slMua = 1;
//sl đã bán ra, nếu ch bán được thì set = 0, còn nếu đã bán thì update + 1 mỗi lần user order thành công
: Lưu ý exists của tồn tại và nó check xem keyName có tồn tại không
const getKey = await exists(keyName);
if(!getKey) {
await set(keyName, 0)
}
//lấy số lượng bán ra
const slBanRa = await get(keyName)
//Nếu số lượng bán ra + số lượng mua(slMua) > slTonKho return false

 ==================== v2 

 Redis, NodeJs Cách khắc phục kho còn 1 nhưng có nhiều USERS mua hàng cùng một lúc 

 // giả sử số lượng tồn kho hiện tại là 10
     const slTonkho = 10
 //tn của sp.
     const keyName = "iPhone13"
 // mỗi lần mua thì lượng tiêu thụ hàng tồn kho là 1
     const slMua = 1;
 //sl đã bán ra, nếu ch bán được thì set = 0, còn nếu đã bán thì update + 1 mỗi lần user order thành công
     : Lưu ý exists của tồn tại và nó check xem keyName có tồn tại không
     const getKey  = await exists(keyName);
     if(!getKey) {
     //Lưu ý: nếu có đồng thời, hai hay nhiều ng truy cập mua hàng cùng 1 lúc, thì sử dụng
     setnx sẽ không được đặt lại
         await setnx(keyName, 0)
     }
     
 //lấy số lượng bán ra
     let slBanRa = await get(keyName)
 console.long("Tck khi user order thanh cong thi sl ban ra ===", slBanRa)
 //Nếu số lượng bán ra + số lượng mua(slMua) > slTonKho return false
     slBanRa = await incrby(keyName, slMua) // vd: 8 + 1 = 9
     if(slBanRa > slTonKho) {
     return res.json({
         status: "error",
         msg: "HH",
         time
     )}
     // nếu thành công thì thì sẽ decs đi vs slTonKho = slTK - slBanRa
 //Sau khi user order thanh cong thi sl ban ra slBanRa
     if(slBanRa > slTonKho)
 
 ==> Vậy nếu